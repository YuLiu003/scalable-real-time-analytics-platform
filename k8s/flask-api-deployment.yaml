apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
  namespace: analytics-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      labels:
        app: flask-api
    spec:
      containers:
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: flask-api
        image: flask-api:latest
        env:
        - name: API_KEY_1
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: api-key-1
        - name: API_KEY_2
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: api-key-2
        imagePullPolicy: Never
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
