name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8
          pip install -r data-ingestion/requirements.txt
          pip install -r processing-engine/requirements.txt
          pip install -r storage-layer/requirements.txt
          pip install -r visualization/requirements.txt
          pip install -r flask-api/requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run unit tests
        run: |
          pytest test/unit -v

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and Push Data Ingestion
        uses: docker/build-push-action@v4
        with:
          context: ./data-ingestion
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/data-ingestion:latest

      - name: Build and Push Processing Engine
        uses: docker/build-push-action@v4
        with:
          context: ./processing-engine
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/processing-engine:latest

      - name: Build and Push Storage Layer
        uses: docker/build-push-action@v4
        with:
          context: ./storage-layer
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/storage-layer:latest

      - name: Build and Push Visualization
        uses: docker/build-push-action@v4
        with:
          context: ./visualization
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/visualization:latest
          
      - name: Build and Push Secure API
        uses: docker/build-push-action@v4
        with:
          context: ./flask-api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/secure-api:latest

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run security check script
        run: |
          chmod +x scripts/security-check.sh
          ./scripts/security-check.sh

      - name: Scan Docker images for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/secure-api:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'