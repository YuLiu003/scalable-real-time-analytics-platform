version: '3.8'

services:
  gin-api:
    build:
      context: ../gin-api
      dockerfile: Dockerfile
    ports:
      - "5050:8080"
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=sensor-data
      - API_KEY_1=test-key-1
      - API_KEY_2=test-key-2
      - TENANT_API_KEY_MAP={"test-key-1":"tenant1","test-key-2":"tenant2"}
      - ENABLE_TENANT_ISOLATION=true
      - GIN_MODE=debug
      - PORT=8080
    depends_on:
      - kafka
    networks:
      - kafka-network

  tenant-mgmt:
    build:
      context: ../platform/tenant-management
      dockerfile: Dockerfile
    ports:
      - "5010:5010"
    environment:
      - PLATFORM_MODE=docker
    volumes:
      - ../platform/tenant-management:/app
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:3.4.1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID:-testclusterid}
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge